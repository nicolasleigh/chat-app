// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: users.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (
  username, email, image_url, clerk_id
) VALUES (
  $1, $2, $3, $4
)
RETURNING id, username, email, clerk_id, image_url
`

type CreateUserParams struct {
	Username string
	Email    string
	ImageUrl pgtype.Text
	ClerkID  string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser,
		arg.Username,
		arg.Email,
		arg.ImageUrl,
		arg.ClerkID,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Email,
		&i.ClerkID,
		&i.ImageUrl,
	)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, username, email, clerk_id, image_url FROM users 
WHERE clerk_id = $1 LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, clerkID string) (User, error) {
	row := q.db.QueryRow(ctx, getUser, clerkID)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.Email,
		&i.ClerkID,
		&i.ImageUrl,
	)
	return i, err
}
